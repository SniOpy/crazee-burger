{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/home/bernardo/Documents/crazee-burger/src/components/reusable-ui/ToggleButton.js\";\nimport React from \"react\";\nimport { theme } from \"../../theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleButton(_ref) {\n  let {\n    isChecked,\n    onToggle,\n    labelIfChecked = \"Fermer\",\n    labelIfUnchecked = \"Ouvrir\"\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ToggleButtonStyled, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      className: \"toggle\",\n      id: \"rounded\",\n      checked: isChecked,\n      onChange: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"rounded\",\n      className: \"rounded\",\n      \"data-checked\": labelIfChecked,\n      \"data-unchecked\": labelIfUnchecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = ToggleButton;\n\nconst ToggleButtonStyled = _styled.div.withConfig({\n  displayName: \"ToggleButton__ToggleButtonStyled\",\n  componentId: \"sc-1t61lvi-0\"\n})([\"display:flex;margin-right:10px;input[type=\\\"checkbox\\\"]{&.toggle{display:none;}&.toggle + label{display:inline-block;height:40px;width:200px;position:relative;font-size:\", \";letter-spacing:0.5px;border:2px solid \", \";padding:0;margin:0;cursor:pointer;box-sizing:border-box;transition:all 500ms ease;}&.toggle + label:before{content:\\\"\\\";position:absolute;top:3px;height:30px;width:30px;transition:all 500ms ease;z-index:3;}&.toggle + label:after{width:150px;text-align:center;z-index:2;text-transform:uppercase;position:absolute;top:50%;transform:translateY(-50%);text-overflow:ellipsis;overflow:hidden;}&.toggle + label.rounded{border-radius:30px;}&.toggle + label.rounded:before{border-radius:50%;}&.toggle:not(:checked) + label{background-color:\", \";}&.toggle:not(:checked) + label:after{content:attr(data-unchecked);right:8px;left:auto;opacity:1;color:\", \";font-weight:\", \";}&.toggle:not(:checked) + label:before{left:3px;background-color:\", \";}&.toggle:checked + label{text-align:left;border-color:\", \";}&.toggle:checked + label:after{content:attr(data-checked);left:9px;right:auto;opacity:1;color:\", \";letter-spacing:0px;}&.toggle:checked + label:before{left:162px;background-color:\", \";}}\"], theme.fonts.size.XXS, theme.colors.background_dark, theme.colors.background_dark, theme.colors.primary, theme.fonts.weights.bold, theme.colors.primary, theme.colors.primary, theme.colors.dark, theme.colors.primary);\n\n_c2 = ToggleButtonStyled;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToggleButton\");\n$RefreshReg$(_c2, \"ToggleButtonStyled\");","map":{"version":3,"names":["React","theme","ToggleButton","isChecked","onToggle","labelIfChecked","labelIfUnchecked","ToggleButtonStyled","styled","div","fonts","size","XXS","colors","background_dark","primary","weights","bold","dark"],"sources":["/home/bernardo/Documents/crazee-burger/src/components/reusable-ui/ToggleButton.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components/macro\"\nimport { theme } from \"../../theme\"\n\nexport default function ToggleButton({\n  isChecked,\n  onToggle,\n  labelIfChecked = \"Fermer\",\n  labelIfUnchecked = \"Ouvrir\",\n}) {\n  return (\n    <ToggleButtonStyled>\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id=\"rounded\"\n        checked={isChecked}\n        onChange={onToggle}\n      />\n      <label\n        htmlFor=\"rounded\"\n        className=\"rounded\"\n        data-checked={labelIfChecked}\n        data-unchecked={labelIfUnchecked}\n      ></label>\n    </ToggleButtonStyled>\n  )\n}\n\nconst ToggleButtonStyled = styled.div`\n  /* border: 1px solid red; */\n\n  display: flex;\n  margin-right: 10px;\n  input[type=\"checkbox\"] {\n    // Hides the square box but keeps the core \"toggle functionality\"\n    &.toggle {\n      display: none;\n    }\n\n    &.toggle + label {\n      display: inline-block;\n      height: 40px;\n      width: 200px;\n      position: relative;\n      font-size: ${theme.fonts.size.XXS};\n      letter-spacing: 0.5px;\n      border: 2px solid ${theme.colors.background_dark};\n      padding: 0;\n      margin: 0;\n      cursor: pointer;\n      box-sizing: border-box;\n      transition: all 500ms ease;\n    }\n\n    // the small round circle\n    &.toggle + label:before {\n      content: \"\";\n      position: absolute;\n      top: 3px;\n      height: 30px;\n      width: 30px;\n      transition: all 500ms ease;\n      z-index: 3;\n    }\n\n    // text inside the switch button (for checked and unchecked)\n    &.toggle + label:after {\n      /* border: 1px solid blue; */\n      width: 150px;\n      text-align: center;\n      z-index: 2;\n      text-transform: uppercase;\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n\n    // outside box\n    &.toggle + label.rounded {\n      border-radius: 30px;\n    }\n\n    // small circle\n    &.toggle + label.rounded:before {\n      border-radius: 50%;\n    }\n\n    &.toggle:not(:checked) + label {\n      background-color: ${theme.colors.background_dark};\n      /* text-align: right; */\n    }\n\n    // text label when not checked\n    &.toggle:not(:checked) + label:after {\n      content: attr(data-unchecked);\n      right: 8px;\n      left: auto;\n      opacity: 1;\n      color: ${theme.colors.primary};\n      font-weight: ${theme.fonts.weights.bold};\n    }\n\n    // small circle when not checked\n    &.toggle:not(:checked) + label:before {\n      left: 3px;\n      background-color: ${theme.colors.primary};\n    }\n\n    // box container when checked\n    &.toggle:checked + label {\n      text-align: left;\n      border-color: ${theme.colors.primary};\n    }\n\n    // label text when checked\n    &.toggle:checked + label:after {\n      content: attr(data-checked);\n      left: 9px;\n      right: auto;\n      opacity: 1;\n      color: ${theme.colors.dark};\n      letter-spacing: 0px;\n    }\n\n    // small circle when checked\n    &.toggle:checked + label:before {\n      left: 162px;\n      background-color: ${theme.colors.primary};\n    }\n  }\n`\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,aAAtB;;AAEA,eAAe,SAASC,YAAT,OAKZ;EAAA,IALkC;IACnCC,SADmC;IAEnCC,QAFmC;IAGnCC,cAAc,GAAG,QAHkB;IAInCC,gBAAgB,GAAG;EAJgB,CAKlC;EACD,oBACE,QAAC,kBAAD;IAAA,wBACE;MACE,IAAI,EAAC,UADP;MAEE,SAAS,EAAC,QAFZ;MAGE,EAAE,EAAC,SAHL;MAIE,OAAO,EAAEH,SAJX;MAKE,QAAQ,EAAEC;IALZ;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MACE,OAAO,EAAC,SADV;MAEE,SAAS,EAAC,SAFZ;MAGE,gBAAcC,cAHhB;MAIE,kBAAgBC;IAJlB;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;KAvBuBJ,Y;;AAyBxB,MAAMK,kBAAkB,GAAGC,OAAM,CAACC,GAAV;EAAA;EAAA;AAAA,orCAgBLR,KAAK,CAACS,KAAN,CAAYC,IAAZ,CAAiBC,GAhBZ,EAkBEX,KAAK,CAACY,MAAN,CAAaC,eAlBf,EA8DEb,KAAK,CAACY,MAAN,CAAaC,eA9Df,EAwETb,KAAK,CAACY,MAAN,CAAaE,OAxEJ,EAyEHd,KAAK,CAACS,KAAN,CAAYM,OAAZ,CAAoBC,IAzEjB,EA+EEhB,KAAK,CAACY,MAAN,CAAaE,OA/Ef,EAqFFd,KAAK,CAACY,MAAN,CAAaE,OArFX,EA8FTd,KAAK,CAACY,MAAN,CAAaK,IA9FJ,EAqGEjB,KAAK,CAACY,MAAN,CAAaE,OArGf,CAAxB;;MAAMR,kB"},"metadata":{},"sourceType":"module"}