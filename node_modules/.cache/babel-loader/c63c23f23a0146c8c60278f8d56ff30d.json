{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { fakeBasket } from \"../fakeData/fakeBasket\";\nimport { deepClone, findObjectById, findIndexById, removeObjectById } from \"../utils/array\";\nexport const useBasket = () => {\n  _s();\n\n  const [basket, setBasket] = useState(fakeBasket.EMPTY);\n\n  const handleAddToBasket = idProductToAdd => {\n    const basketCopy = deepClone(basket);\n    const productAlreadyInBasket = findObjectById(idProductToAdd, basketCopy);\n\n    if (productAlreadyInBasket) {\n      incrementProductAlreadyInBasket(idProductToAdd, basketCopy);\n      return;\n    }\n\n    createNewBasketProduct(idProductToAdd, basketCopy, setBasket);\n  };\n\n  const incrementProductAlreadyInBasket = (idProductToAdd, basketCopy) => {\n    const indexOfBasketProductToIncrement = findIndexById(idProductToAdd, basketCopy);\n    basketCopy[indexOfBasketProductToIncrement].quantity += 1;\n    setBasket(basketCopy);\n  };\n\n  const createNewBasketProduct = (idProductToAdd, basketCopy, setBasket) => {\n    // we do not re-create a whole product, we only add the extra info a basket product has in comparison to a menu product\n    const newBasketProduct = {\n      id: idProductToAdd,\n      quantity: 1\n    };\n    const newBasket = [newBasketProduct, ...basketCopy];\n    setBasket(newBasket);\n  };\n\n  const handleDeleteBasketProduct = idBasketProduct => {\n    const basketUpdated = removeObjectById(idBasketProduct, basket);\n    setBasket(basketUpdated);\n  };\n\n  return {\n    basket,\n    handleAddToBasket,\n    handleDeleteBasketProduct\n  };\n};\n\n_s(useBasket, \"tFIXWNTFzZjQLi1jp+LuUTfv2ag=\");","map":{"version":3,"names":["useState","fakeBasket","deepClone","findObjectById","findIndexById","removeObjectById","useBasket","basket","setBasket","EMPTY","handleAddToBasket","idProductToAdd","basketCopy","productAlreadyInBasket","incrementProductAlreadyInBasket","createNewBasketProduct","indexOfBasketProductToIncrement","quantity","newBasketProduct","id","newBasket","handleDeleteBasketProduct","idBasketProduct","basketUpdated"],"sources":["/home/bernardo/Documents/crazee-burger/src/hooks/useBasket.js"],"sourcesContent":["import { useState } from \"react\"\nimport { fakeBasket } from \"../fakeData/fakeBasket\"\nimport { deepClone, findObjectById, findIndexById, removeObjectById } from \"../utils/array\"\n\nexport const useBasket = () => {\n  const [basket, setBasket] = useState(fakeBasket.EMPTY)\n\n  const handleAddToBasket = (idProductToAdd) => {\n    const basketCopy = deepClone(basket)\n    const productAlreadyInBasket = findObjectById(idProductToAdd, basketCopy)\n\n    if (productAlreadyInBasket) {\n      incrementProductAlreadyInBasket(idProductToAdd, basketCopy)\n      return\n    }\n\n    createNewBasketProduct(idProductToAdd, basketCopy, setBasket)\n  }\n\n  const incrementProductAlreadyInBasket = (idProductToAdd, basketCopy) => {\n    const indexOfBasketProductToIncrement = findIndexById(idProductToAdd, basketCopy)\n    basketCopy[indexOfBasketProductToIncrement].quantity += 1\n    setBasket(basketCopy)\n  }\n\n  const createNewBasketProduct = (idProductToAdd, basketCopy, setBasket) => {\n    // we do not re-create a whole product, we only add the extra info a basket product has in comparison to a menu product\n    const newBasketProduct = { id: idProductToAdd, quantity: 1 }\n    const newBasket = [newBasketProduct, ...basketCopy]\n    setBasket(newBasket)\n  }\n\n  const handleDeleteBasketProduct = (idBasketProduct) => {\n    const basketUpdated = removeObjectById(idBasketProduct, basket)\n    setBasket(basketUpdated)\n  }\n\n  return { basket, handleAddToBasket, handleDeleteBasketProduct }\n}\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,aAApC,EAAmDC,gBAAnD,QAA2E,gBAA3E;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACC,UAAU,CAACQ,KAAZ,CAApC;;EAEA,MAAMC,iBAAiB,GAAIC,cAAD,IAAoB;IAC5C,MAAMC,UAAU,GAAGV,SAAS,CAACK,MAAD,CAA5B;IACA,MAAMM,sBAAsB,GAAGV,cAAc,CAACQ,cAAD,EAAiBC,UAAjB,CAA7C;;IAEA,IAAIC,sBAAJ,EAA4B;MAC1BC,+BAA+B,CAACH,cAAD,EAAiBC,UAAjB,CAA/B;MACA;IACD;;IAEDG,sBAAsB,CAACJ,cAAD,EAAiBC,UAAjB,EAA6BJ,SAA7B,CAAtB;EACD,CAVD;;EAYA,MAAMM,+BAA+B,GAAG,CAACH,cAAD,EAAiBC,UAAjB,KAAgC;IACtE,MAAMI,+BAA+B,GAAGZ,aAAa,CAACO,cAAD,EAAiBC,UAAjB,CAArD;IACAA,UAAU,CAACI,+BAAD,CAAV,CAA4CC,QAA5C,IAAwD,CAAxD;IACAT,SAAS,CAACI,UAAD,CAAT;EACD,CAJD;;EAMA,MAAMG,sBAAsB,GAAG,CAACJ,cAAD,EAAiBC,UAAjB,EAA6BJ,SAA7B,KAA2C;IACxE;IACA,MAAMU,gBAAgB,GAAG;MAAEC,EAAE,EAAER,cAAN;MAAsBM,QAAQ,EAAE;IAAhC,CAAzB;IACA,MAAMG,SAAS,GAAG,CAACF,gBAAD,EAAmB,GAAGN,UAAtB,CAAlB;IACAJ,SAAS,CAACY,SAAD,CAAT;EACD,CALD;;EAOA,MAAMC,yBAAyB,GAAIC,eAAD,IAAqB;IACrD,MAAMC,aAAa,GAAGlB,gBAAgB,CAACiB,eAAD,EAAkBf,MAAlB,CAAtC;IACAC,SAAS,CAACe,aAAD,CAAT;EACD,CAHD;;EAKA,OAAO;IAAEhB,MAAF;IAAUG,iBAAV;IAA6BW;EAA7B,CAAP;AACD,CAlCM;;GAAMf,S"},"metadata":{},"sourceType":"module"}