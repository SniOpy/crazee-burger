{"ast":null,"code":"export function formatPrice(priceToFormat) {\n  let price = priceToFormat; // @TODO: perhaps change this to if(!price) return 0\n\n  if (!price) return \"0,00 €\";\n  price = replaceFrenchCommaWithDot(price);\n  const formattedPrice = new Intl.NumberFormat(\"fr-FR\", {\n    style: \"currency\",\n    currency: \"EUR\"\n  }).format(price);\n  return formattedPrice;\n}\nexport function replaceFrenchCommaWithDot(price) {\n  if (typeof price === \"string\") price = parseFloat(price.replace(\",\", \".\"));\n  return price;\n}","map":{"version":3,"names":["formatPrice","priceToFormat","price","replaceFrenchCommaWithDot","formattedPrice","Intl","NumberFormat","style","currency","format","parseFloat","replace"],"sources":["/home/bernardo/Documents/crazee-burger/src/utils/maths.js"],"sourcesContent":["export function formatPrice(priceToFormat) {\n  let price = priceToFormat\n\n  // @TODO: perhaps change this to if(!price) return 0\n  if (!price) return \"0,00 €\"\n  price = replaceFrenchCommaWithDot(price)\n\n  const formattedPrice = new Intl.NumberFormat(\"fr-FR\", {\n    style: \"currency\",\n    currency: \"EUR\",\n  }).format(price)\n  return formattedPrice\n}\n\nexport function replaceFrenchCommaWithDot(price) {\n  if (typeof price === \"string\") price = parseFloat(price.replace(\",\", \".\"))\n  return price\n}\n"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAqBC,aAArB,EAAoC;EACzC,IAAIC,KAAK,GAAGD,aAAZ,CADyC,CAGzC;;EACA,IAAI,CAACC,KAAL,EAAY,OAAO,QAAP;EACZA,KAAK,GAAGC,yBAAyB,CAACD,KAAD,CAAjC;EAEA,MAAME,cAAc,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;IACpDC,KAAK,EAAE,UAD6C;IAEpDC,QAAQ,EAAE;EAF0C,CAA/B,EAGpBC,MAHoB,CAGbP,KAHa,CAAvB;EAIA,OAAOE,cAAP;AACD;AAED,OAAO,SAASD,yBAAT,CAAmCD,KAAnC,EAA0C;EAC/C,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+BA,KAAK,GAAGQ,UAAU,CAACR,KAAK,CAACS,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAD,CAAlB;EAC/B,OAAOT,KAAP;AACD"},"metadata":{},"sourceType":"module"}